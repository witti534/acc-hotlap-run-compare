using acc_hotrun_run_compare.DBClasses;
using ScottPlot;
using ScottPlot.WinForms;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Automation;
using System.Windows.Forms;

namespace acc_hotrun_run_compare.Graphs
{
    public partial class GraphTimedifference : Form
    {
        readonly StoredRunContext storedRunContext = StoredRunContext.GetInstance();
        readonly FormsPlot timedifferencePlot = new() { Dock = DockStyle.Fill };
        readonly int amountOfLapsFastestRun;
        readonly decimal averageLapTimeFastestRun;

        public GraphTimedifference(List<RunInformation> providedRuns)
        {
            //VS autogenerated code
            InitializeComponent();

            Controls.Add(timedifferencePlot);

            PixelPadding padding = new(60, 15, 30, 15);
            //Properly fir out the frame with space for axes

            ScottPlot.TickGenerators.NumericFixedInterval xTicks = new()
            {
                Interval = 1
            };
            timedifferencePlot.Plot.Axes.Bottom.TickGenerator = xTicks;
            //We want the x-axis ticks at only full laps

            providedRuns.Sort(new RunInformationComparerFastestRunFirst());

            amountOfLapsFastestRun = providedRuns[0].SectorList.Count / 3;
            averageLapTimeFastestRun = providedRuns[0].DrivenTime / (amountOfLapsFastestRun * 1000m) ;

            foreach (RunInformation providedRun in providedRuns)
            {
                int[] lapTimesInMs = providedRun.GetLaptimes();
                decimal[] lapTimesInS = new decimal[lapTimesInMs.Length + 1]; 
                int[] lapNumbers = new int[lapTimesInMs.Length + 1];
                decimal[] timedifferences = new decimal[lapTimesInMs.Length + 1];
                decimal timedifference;

                for (int i = 0; i < lapTimesInMs.Length; i++)
                {
                    if (i == 0)
                    {
                        timedifferences[0] = 0;
                        lapNumbers[0] = 0;
                    }
                    lapTimesInS[i + 1] = lapTimesInMs[i] / 1000m;
                    timedifference = lapTimesInS[i + 1] - averageLapTimeFastestRun;
                    timedifferences[i + 1] = timedifferences[i] + timedifference;
                    
                    lapNumbers[i + 1] = i + 1; //better display
                }

                timedifferencePlot.Plot.Add.Scatter(lapNumbers, timedifferences);
            }
            
        }
    }
}
