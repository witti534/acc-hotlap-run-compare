using acc_hotrun_run_compare.DBClasses;
using ScottPlot.WinForms;
using ScottPlot;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using ScottPlot.Plottables;

namespace acc_hotrun_run_compare.Graphs
{
    public partial class GraphLaptimes : Form
    {
        readonly StoredRunContext storedRunContext = StoredRunContext.GetInstance();
        readonly FormsPlot lapTimesPlot = new() { Dock = DockStyle.Fill };

        decimal slowestLapTime = 0m;
        decimal fastestLapTime = 10000m; //larger than any possible lap time in this game mode, so guaranteed that laps will be faster
        int mostLapsRun = 0;

        public GraphLaptimes(List<RunInformation> providedRuns)
        {
            //VS autogenerated code
            InitializeComponent();

            Controls.Add(lapTimesPlot);

            foreach (RunInformation providedRun in providedRuns)
            {
                //Once for each run
                int[] lapTimesInMs = providedRun.GetLaptimes(); //Y values in the graph
                decimal[] lapTimesInSeconds = new decimal[lapTimesInMs.Length];
                int[] lapnumbers = new int[lapTimesInMs.Length];

                if (lapnumbers.Length > mostLapsRun)
                {
                    //Getting the biggest lap number
                    mostLapsRun = lapnumbers.Length;
                }

                for (int i = 0; i < lapTimesInMs.Length; i++)
                {
                    lapTimesInSeconds[i] = lapTimesInMs[i] / 1000m; //Use seconds instead of miliseconds

                    if (lapTimesInSeconds[i] > slowestLapTime)
                    {
                        //Getting the slowest lap time of all laps
                        slowestLapTime = lapTimesInSeconds[i];
                    }
                    if (lapTimesInSeconds[i] < fastestLapTime)
                    {
                        //Getting the fastest lap time of all laps
                        fastestLapTime = lapTimesInSeconds[i];
                    }

                    lapnumbers[i] = i + 1; //X values in the graph
                }

                Scatter runPlot = lapTimesPlot.Plot.Add.Scatter(lapnumbers, lapTimesInSeconds);
                runPlot.LegendText = "Car: " + providedRun.CarName + "\r\n" + "Info: " + providedRun.RunDescription;
            } //end foreach single run

            SetupTickGenerators(lapTimesPlot);

            lapTimesPlot.Plot.Grid.MinorLineWidth = 1;
            lapTimesPlot.Plot.Grid.MinorLineColor = Colors.LightGray.WithAlpha(0.5);

            lapTimesPlot.Plot.Grid.MajorLineWidth = 2;
            lapTimesPlot.Plot.Grid.MajorLineColor = Colors.DarkGray.WithAlpha(0.5);

            lapTimesPlot.Plot.Axes.SetLimits(0.5, mostLapsRun + 0.5, (double)fastestLapTime * 0.995, (double)slowestLapTime * 1.005);

            lapTimesPlot.Plot.ShowLegend(Edge.Right);
        }

        /// <summary>
        /// This function sets up the ticks for the axes to be used in the graph
        /// </summary>
        /// <param name="timedifferencePlot"></param>
        private void SetupTickGenerators(FormsPlot timedifferencePlot)
        {
            ScottPlot.TickGenerators.NumericManual xTicks = new();
            for (int i = 1; i <= mostLapsRun; i++)
            {
                xTicks.AddMajor(i, i.ToString());
            }
            lapTimesPlot.Plot.Axes.Bottom.TickGenerator = xTicks;
            //We want the x-axis ticks at only full laps

            //Create yAxis ticks for values >= 0
            ScottPlot.TickGenerators.NumericManual yTicks = new();
            for (decimal d = 0.0m; d < slowestLapTime + 1; d += 0.1m)
            {
                if (Decimal.IsInteger(d))
                {
                    yTicks.AddMajor((double)d, d.ToString() + "s");
                }
                else
                {
                    yTicks.AddMinor((double)d);
                }
            }
            //Create yAxis ticks for values < 0
            for (decimal d = -0.1m; d > fastestLapTime - 1; d -= 0.1m)
            {
                if (Decimal.IsInteger(d))
                {
                    yTicks.AddMajor((double)d, d.ToString() + "s");
                }
                else
                {
                    yTicks.AddMinor((double)d);
                }
            }
            lapTimesPlot.Plot.Axes.Left.TickGenerator = yTicks;
        }
    }
}
